(__load "stdlib/numeric.rlp")
(__load "stdlib/defines.rlp")

(macro (-> arg funcs)
  (def (insert-1 l v)
    (if (list? l) none (set! l (list l)))
    (+ (list (head l) v) (tail l)))
  (def curr-call (insert-1 (head funcs) arg))
  (def len (length funcs))
  (def i 1)
  (while (less-than i len)
    (set! curr-call (insert-1 (nth funcs i) curr-call))
    (set! i (++ i)))
  curr-call)

(macro (->> arg funcs)
  (def (push-arg l v)
    (if (list? l) none (set! l (list l)))
    (append l v))
  (def curr-call (push-arg (head funcs) arg))
  (def len (length funcs))
  (def i 1)
  (while (less-than i len)
    (set! curr-call (push-arg (nth funcs i) curr-call))
    (set! i (++ i)))
  curr-call)