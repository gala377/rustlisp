
(def #t '#t)
(def #f '#f)
(def nil '())
(def none 'none)

(macro (when arg body)
  `(if ,arg ,body none))

(macro (unless arg body)
  `(if ,arg none ,body))

(macro (import name . renames)
  `(module-import
    ,name
    ,@(map (lambda (x) `(quote ,x))
           renames)))

(macro (def* name . body)
  (def exported-name
    (if (list? name)
      (nth name 0)
      (name)))
  `(begin
    (def ,name ,@body)
    (export ,exported-name))
)

(macro (macro* name . body)
  (def exported-name
    (if (list? name)
      (nth name 0)
      (name)))
  `(begin
    (macro ,name ,@body)
    (export ,exported-name))
)