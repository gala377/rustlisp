
(def my-list '(1 2 3))
(def my-string "my-string")
(def my-lambda (lambda () '()))
(def (simple-func a b) (+ a b))


(assert-true (eq? 1 1) "this passes 1")
(assert-true (eq? my-list my-list) "this passes 2")
(assert-true (eq? my-string my-string) "this passes 3")
(assert-true (eq? my-lambda my-lambda) "this passes 4")
(assert-true (eq? simple-func simple-func) "this passes 5")
(assert-true (eq? assert assert) "this passes 6")
(assert-true (eq? "my-string" my-string) "this passes 7")
(assert-true (eq? 'some-sym 'some-sym) "this passes 8")

(assert-true (equal? '(1 2 3) '(1 2 3)) "this passes 11")
(assert-true (equal? '(1 2 (1 2 a (b 2 3))) '(1 2 (1 2 a (b 2 3)))) "This passes 22")
(assert-true (equal? 1 1) "this passes 33")
(assert-true (equal? my-list my-list) "this passes 44")
(assert-true (equal? my-string my-string) "this passes 55")
(assert-true (equal? my-lambda my-lambda) "this passes 66")
(assert-true (equal? simple-func simple-func) "this passes 77")
(assert-true (equal? assert assert) "this passes 88")
(assert-true (equal? "my-string" my-string) "this passes 99")
(assert-true (equal? 'some-sym 'some-sym) "this passes 1010")