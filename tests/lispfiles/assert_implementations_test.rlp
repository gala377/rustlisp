(def my-list '(1 2 3))
(def my-string "my-string")
(def my-lambda (lambda () '()))
(def (simple-func a b) (+ a b))


(assert-equal 1 1)
(assert-equal my-list my-list)
(assert-equal my-string my-string)
(assert-equal my-lambda my-lambda)
(assert-equal simple-func simple-func)
(assert-equal assert assert)
(assert-equal "my-string" my-string)
(assert-equal 'some-sym 'some-sym)

(assert-true #t "this passes")
(assert-true (not (eq? my-lambda assert)) "this passes")
(assert-true (not #f) "this passes")

(assert-equal '(1 2 3) '(1 2 3))
(assert-equal '(1 2 (1 2 a (b 2 3))) '(1 2 (1 2 a (b 2 3))))
(assert-equal 1 1)
(assert-equal my-list my-list)
(assert-equal my-string my-string)
(assert-equal my-lambda my-lambda)
(assert-equal simple-func simple-func)
(assert-equal assert assert)
(assert-equal "my-string" my-string)
(assert-equal 'some-sym 'some-sym)